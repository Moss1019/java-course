/*
 * This file is generated by jOOQ.
 */
package com.mossonthetree.database.tables.records;


import com.mossonthetree.database.tables.TBLTrade;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TBLTradeRecord extends UpdatableRecordImpl<TBLTradeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.trade.trade_id</code>.
     */
    public void setTradeId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.trade.trade_id</code>.
     */
    public String getTradeId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.trade.account_id</code>.
     */
    public void setAccountId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.trade.account_id</code>.
     */
    public String getAccountId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.trade.instrument</code>.
     */
    public void setInstrument(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.trade.instrument</code>.
     */
    public String getInstrument() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.trade.buy_price</code>.
     */
    public void setBuyPrice(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.trade.buy_price</code>.
     */
    public Double getBuyPrice() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>public.trade.is_open</code>.
     */
    public void setIsOpen(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.trade.is_open</code>.
     */
    public Boolean getIsOpen() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TBLTradeRecord
     */
    public TBLTradeRecord() {
        super(TBLTrade.TRADE);
    }

    /**
     * Create a detached, initialised TBLTradeRecord
     */
    public TBLTradeRecord(String tradeId, String accountId, String instrument, Double buyPrice, Boolean isOpen) {
        super(TBLTrade.TRADE);

        setTradeId(tradeId);
        setAccountId(accountId);
        setInstrument(instrument);
        setBuyPrice(buyPrice);
        setIsOpen(isOpen);
        resetChangedOnNotNull();
    }
}
